package main

import (
	"encoding/json"
	"time"
)

// Generated by https://quicktype.io

/*
Contiene I dati di:
	=> TS - Orario in cui è stata fatta la misurazione
	=> Pm25 -  Indice inquinamento polveri sottili
			=> Indice sulla qualità dell'aria generalizzata
			=> Indice di concentrazione delle polveri sottili nell'aria
	=> Condition - Condizione meteorologica al momento della misurazione
	=> Humidity - Livello di Umidità al momento della misura
*/
type Data struct {
	Ts          string
	Pm25Aqi     int64
	Temperature int64
	Latitude    float64
	Longitude   float64
}

func (out *Data) UnmarshalJSON(toParse []byte) error {
	var dataMap data
	if err := json.Unmarshal(toParse, &dataMap); err != nil {
		return err
	}

	timeobj, err := time.Parse(time.RFC3339, dataMap.ts)
	if err != nil {
		return err
	}

	out = &Data{
		timeobj.UTC().Unix(),
	}
	return nil
}

type data struct {
	ts          string      `json:"ts"`
	pm25        pm25        `json:"pm25"`
	temperature int64       `json:"temperature"`
	coordinates coordinates `json:"coordinates"`
}

type coordinates struct {
	latitude  float64 `json:"latitude"`
	longitude float64 `json:"longitude"`
}

type pm25 struct {
	aqi           int64   `json:"aqi"`
	concentration float64 `json:"concentration"`
}

type wind struct {
	speed     float64 `json:"speed"`
	direction int64   `json:"direction"`
}
